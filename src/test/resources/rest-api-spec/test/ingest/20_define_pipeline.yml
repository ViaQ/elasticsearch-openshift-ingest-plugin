---
"Define pipeline":
# Turn on logging in our package
# Logs are found in "build/cluster/integTestCluster node#/elasticsearch-6.8.6/logs"
  - do:
      cluster.put_settings:
        body:
          transient:
            logger.org.elasticsearch.ingest.openshift: "TRACE"
        flat_settings: true
  - match: { acknowledged: true }

# Create pipeline with our Openshift processor
  - do:
      ingest.put_pipeline:
        id: "openshift_schema"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "openshift-index_name-processor": {
                }
              }
            ]
          }
  - match: { acknowledged: true }
# "if": "ctx.schema != null"

  - do:
      ingest.get_pipeline:
        id: "openshift_schema"
  - match: { openshift_schema.description: "_description" }
  - match: { openshift_schema.processors.0.openshift-index_name-processor: {} }

# Create pipeline that will forward document to Openshift processor
# if specific field is populated.
# !!! This does not work for ES testing framework, why?
#  - do:
#      ingest.put_pipeline:
#        id: "my_default_pipeline"
#        body: >
#          {
#            "processors": [
#              {
#                "pipeline": {
#                  "name": "openshift_schema",
#                  "if": "ctx.schema != null"
#                }
#              }
#            ]
#          }
#  - match: { acknowledged: true }


# Index template that will create indices with specific write and read aliases using {index} placeholder
# See: https://www.elastic.co/guide/en/elasticsearch/reference/6.8/indices-templates.html
# !!! This is nto supported in ES < 7.11
# !!! See: https://github.com/elastic/elasticsearch/issues/52152#issuecomment-586748585 (Imotov opens a ticker for this)
# !!! See: https://github.com/elastic/elasticsearch/pull/52306 (community fix, closed)
# !!! See: https://github.com/elastic/elasticsearch/pull/63162 (fix for ES 7.11)
#  - do:
#      indices.put_template:
#        include_type_name: false
#        name: domain_aliases
#        body:
#          index_patterns: [app-schema-*-0000*]
#          aliases:
#            "{index}-write": {
#              is_write_index: true
#            }  # ->  app-schema-foo-00001-write
#            "{index}-read": {}   # ->  app-schema-foo-00001-read

# Index template to be applied on all incoming documents to pass them through default pipeline
# See: https://www.elastic.co/guide/en/elasticsearch/reference/6.8/index-modules.html#dynamic-index-settings
#  - do:
#      indices.put_template:
#        include_type_name: false
#        name: set_defualt_pipeline
#        body:
#          index_patterns: [app-*]
#          index:
#            default_pipeline: openshift_schema

# Index document and pass it through this pipeline
  - do:
      create:
        index:  app-schema-write
        type:   _doc
        id:     1
        body:   {
          schema: "foo",
          message: "Lorem ipsum dolor sit amet."
        }
        pipeline: openshift_schema


  - do:
      create:
        index:  app-foo-write
        type:   _doc
        id:     2
        body:   {
          message: "Lorem ipsum dolor sit amet."
        }
        pipeline: openshift_schema

###
# Old stuff...
###

# Create testing index to see if ClusterStateListener can catch this
#  - do:
#      indices.create:
#        include_type_name: false
#        index: test_index1
#        body:
#          mappings:
#            {}
#  - match: { acknowledged: true }
#  - match: { index: "test_index1"}
#
#  - do:
#      indices.create:
#        include_type_name: false
#        index: test_index2
#        body:
#          mappings:
#            {}
#  - match: { acknowledged: true }
#  - match: { index: "test_index2"}
#
#  - do:
#      indices.delete:
#        index: test_index*
#  - match: { acknowledged: true }

# Delete the pipeline
#  - do:
#      ingest.delete_pipeline:
#        id: "openshift_schema"
#  - match: { acknowledged: true }
